considering the following problem: 

As The Historians wander around a secure area at Easter Bunny HQ, you come across posters for a LAN party scheduled for today! Maybe you can find it; you connect to a nearby datalink port and download a map of the local network (your puzzle input). The network map provides a list of every connection between two computers. For example: kh-tc
qp-kh
de-cg
ka-co
yn-aq
qp-ub
cg-tb
vc-aq
tb-ka
wh-tc
yn-cg
kh-ub
ta-co
de-co
tc-td
tb-wq
wh-td
ta-ka
td-qp
aq-cg
wq-ub
ub-vc
de-ta
wq-aq
wq-vc
wh-yn
ka-de
kh-ta
co-tc
wh-qp
tb-vc
td-yn
 Each line of text in the network map represents a single connection; the line kh-tc represents a connection between the computer named kh and the computer named tc. Connections aren't directional; tc-kh would mean exactly the same thing. LAN parties typically involve multiplayer games, so maybe you can locate it by finding groups of connected computers. Start by looking for sets of three computers where each computer in the set is connected to the other two computers. In this example, there are 12 such sets of three inter-connected computers: aq,cg,yn
aq,vc,wq
co,de,ka
co,de,ta
co,ka,ta
de,ka,ta
kh,qp,ub
qp,td,wh
tb,vc,wq
tc,td,wh
td,wh,yn
ub,vc,wq
 If the Chief Historian is here, and he's at the LAN party, it would be best to know that right away. You're pretty sure his computer's name starts with t, so consider only sets of three computers where at least one computer's name starts with t. That narrows the list down to 7 sets of three inter-connected computers: co,de,ta
co,ka,ta
de,ka,ta
qp,td,wh
tb,vc,wq
tc,td,wh
td,wh,yn
 Find all the sets of three inter-connected computers. How many contain at least one computer with a name that starts with t?

then please write a Kotlin class named Day23, with a main function, to solve this problem. 
the main method should compute : 

A first method named 'part1', called from main() method, solves this first part of the problem.
Compute the result for the sample named 'Day23_star1_sample' and for the input, named 'Day23_input'.
Print the result of part1 to the console.
EXPECTED_SAMPLE is the expected value for the sample, listed in the problem.
It should be like this : 
'
@JvmStatic
fun main(args: Array<String>) {
//    val sample1 = readFileLines("Day23_star1_sample")
//    val result_sample1 = part1(sample1)
//    expect(result_sample1, EXPECTED_SAMPLE)
//    println("sample result=$result_sample1")
    
    val input = readFileLines("Day23_input")
    val result_input = part1(input)
    println("Result=$result_input")
}
'
            

Use readFileLines() method from Utils.kt to read the content of the input file.
Do not add a method readFileLines().

Display map on each iteration, using ansi colored characters, and a boolean flag constant DEBUG (by default = false).
Optimize the algorithm to be efficient and fast so that solution can be found in a reasonable amount of time. 
Use indexes as soon as you can to avoid re-calculating the same value and lost time in long computation. 
Use map as List<CharArray>.
use Long instead of Int to avoid overflow.
Use println("") instead println().
Import java.util.* at the top of the class, if not there.
Add this prompt in comment at the top of the code.
Show the whole code for the kotlin class.