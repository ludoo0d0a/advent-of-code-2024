considering the following problem: 

You and The Historians crowd into the office, startling the Chief Historian awake! The Historians all take turns looking confused until one asks where he's been for the last few months. "I've been right here, working on this high-priority request from Santa! I think the only time I even stepped away was about a month ago when I went to grab a cup of coffee..." Just then, the Chief notices the time. "Oh no! I'm going to be late! I must have fallen asleep trying to put the finishing touches on this chronicle Santa requested, but now I don't have enough time to go visit the last 50 places on my list and complete the chronicle before Santa leaves! He said he needed it before tonight's sleigh launch." One of The Historians holds up the list they've been using this whole time to keep track of where they've been searching. Next to each place you all visited, they checked off that place with a star. Other Historians hold up their own notes they took on the journey; as The Historians, how could they resist writing everything down while visiting all those historically significant places? The Chief's eyes get wide. "With all this, we might just have enough time to finish the chronicle! Santa said he wanted it wrapped up with a bow, so I'll call down to the wrapping department and... hey, could you bring it up to Santa? I'll need to be in my seat to watch the sleigh launch by then." You nod, and The Historians quickly work to collect their notes into the final set of pages for the chronicle.

then please write a Kotlin class named Day25, with a main function, to solve this problem. 
the main method should compute : 

The first part of the problem is solved, now consider the second part of the problem, 
Another method named 'part2', called from main() method, solves this second part of the problem.
Keep the implementation of 'part1' from current class 'Day25'.
Compute the result for the sample named 'Day25_star2_sample' and for the input, named 'Day25_input'.
Print the result of part2 to the console.
EXPECTED_SAMPLE is the expected value for the sample, listed in the problem.
Now it should be like this : 
'
@JvmStatic
fun main(args: Array<String>) {
//    val sample2 = readFileLines("Day25_star2_sample")
//    val result_sample2 = part2(sample2)
//    println("sample2 result=$result_sample2")
    
    val input = readFileLines("Day25_input")
//    val result_input = part1(input)
//    println("Result=$result_input")
    
    val result2_input = part2(input)
    println("Result2=$result_input")
}
' 
            

Use readFileLines() method from Utils.kt to read the content of the input file.
Do not add a method readFileLines().

Display map on each iteration, using ansi colored characters, and a boolean flag constant DEBUG (by default = false).
Optimize the algorithm to be efficient and fast so that solution can be found in a reasonable amount of time. 
Use indexes as soon as you can to avoid re-calculating the same value and lost time in long computation. 
Use map as List<CharArray>.
use Long instead of Int to avoid overflow.
Use println("") instead println().
Import java.util.* at the top of the class, if not there.
Add this prompt in comment at the top of the code.
Show the whole code for the kotlin class.